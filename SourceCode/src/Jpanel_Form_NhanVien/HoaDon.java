/*
* Author: Mai Thị Thanh Thúy
*/
package Jpanel_Form_NhanVien;

import Connection.ConnectionDB;
import Entities.HoaDon_entity;
import Entities.KhachHang_entity;
import Entities.NhanVien_entity;
import Entities.XeMay_entity;
import GUI_Form.DangNhap;
import GUI_Form.TrangChuNhanVien;
import Model.HoaDon_model;
import Model.khachHang_model;

import static Connection.ConnectionDB.openConnection;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author phanb
 */
public class HoaDon extends javax.swing.JPanel {

	TrangChuNhanVien tcnv = new TrangChuNhanVien();

	ArrayList<HoaDon_entity> ob_hd = new ArrayList<>();
	ArrayList<HoaDon_entity> ob_ct = new ArrayList<>();
	ArrayList<HoaDon_entity> ob_tt = new ArrayList<>();
	HoaDon_entity hd_e = new HoaDon_entity();
	HoaDon_model hd_md = new HoaDon_model();
	ArrayList<NhanVien_entity> ob_nv = new ArrayList<>();
	ArrayList<KhachHang_entity> ob_kh = new ArrayList<>();
	ArrayList<NhanVien_entity> nhanvien = new ArrayList<>();
	ArrayList<KhachHang_entity> khachhang = new ArrayList<>();
	ArrayList<HoaDon_entity> hoadon = new ArrayList<>();
	ArrayList<XeMay_entity> ob_id_xe = new ArrayList<>();
	ArrayList<XeMay_entity> xemay = new ArrayList<>();
	List<HoaDon_entity> ob_xuat = new ArrayList<>();
	List<HoaDon_entity> rong = new ArrayList<>();
	DefaultTableModel md = new DefaultTableModel();
	DefaultTableModel md2 = new DefaultTableModel();
	Vector data = new Vector();
	Vector data_ct = new Vector();
	int sltk = 0;

	public HoaDon() {
		initComponents();
		comboKH();
		comboXe();
		txtMaNV.setText(DangNhap.maNV);
		txtThanhTien.setEditable(false);
		txtThanhTien.setForeground(Color.BLUE);
		txtThanhTien.setBackground(new java.awt.Color(153, 153, 153));
		txtGiaXe.setEditable(false);
		txtGiaXe.setForeground(Color.RED);
		txtGiaXe.setBackground(new java.awt.Color(153, 153, 153));

	}
	public void get_CT_HD() {
		ob_ct = hd_md.get_ct();

	}

	public void comboKH() {
		khachhang = hd_md.getComboKH();
		for (KhachHang_entity ob : khachhang) {
			cmbTenKH.addItem(ob.getHoTenKH());
		}
	}

	public void comboXe() {
		xemay = hd_md.getCombo_xe();
		for (XeMay_entity ob : xemay) {
			cmbTenXe.addItem(ob.getTenXe());
		}

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		pnlTable2 = new javax.swing.JPanel();
		jScrollPane6 = new javax.swing.JScrollPane();
		tblChiTietHD = new javax.swing.JTable();
		btnXuatHoaDon = new javax.swing.JButton();
		pnlTTHoaDon = new javax.swing.JPanel();
		lblMaHoaDon = new javax.swing.JLabel();
		txtMaHoaDon = new javax.swing.JTextField();
		lblMaNV = new javax.swing.JLabel();
		txtMaNV = new javax.swing.JTextField();
		lblMaKhacHang = new javax.swing.JLabel();
		cmbTenKH = new javax.swing.JComboBox();
		lblDiaChiKH = new javax.swing.JLabel();
		txtSDTKH = new javax.swing.JTextField();
		lblSDTKH = new javax.swing.JLabel();
		txtDiaChiKH = new javax.swing.JTextField();
		lblTongTien = new javax.swing.JLabel();
		txtTongTien = new javax.swing.JTextField();
		lblDVT = new javax.swing.JLabel();
		lblNgayLap = new javax.swing.JLabel();
		jDateChooser1 = new com.toedter.calendar.JDateChooser();
		btnThemHoaDon = new javax.swing.JButton();
		btnNhapLaiHoaDon = new javax.swing.JButton();
		pnlTTXeMay = new javax.swing.JPanel();
		lblTenXe = new javax.swing.JLabel();
		cmbTenXe = new javax.swing.JComboBox();
		jLabel1 = new javax.swing.JLabel();
		txtMaXe = new javax.swing.JTextField();
		lblGiaXe = new javax.swing.JLabel();
		txtGiaXe = new javax.swing.JTextField();
		lblSoLuong = new javax.swing.JLabel();
		txtSoLuong = new javax.swing.JTextField();
		lblThue = new javax.swing.JLabel();
		txtThue = new javax.swing.JTextField();
		lblThanhTien = new javax.swing.JLabel();
		txtThanhTien = new javax.swing.JTextField();
		lblDVT4 = new javax.swing.JLabel();
		lblDVT3 = new javax.swing.JLabel();
		lblDVT5 = new javax.swing.JLabel();
		lblDVT2 = new javax.swing.JLabel();
		btnThemCTHD = new javax.swing.JButton();
		btnNhapLaiCTHD = new javax.swing.JButton();

		setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

		pnlTable2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
		pnlTable2.setPreferredSize(new java.awt.Dimension(1050, 660));

		tblChiTietHD.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null } },
				new String[] { "STT", "Mã hóa đơn", "Tên xe máy", "Đơn giá", "Số lượng", "Thành tiền" }));
		tblChiTietHD.setRequestFocusEnabled(false);
		tblChiTietHD.setRowHeight(18);
		tblChiTietHD.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tblChiTietHDMouseClicked(evt);
			}
		});
		jScrollPane6.setViewportView(tblChiTietHD);
		if (tblChiTietHD.getColumnModel().getColumnCount() > 0) {
			tblChiTietHD.getColumnModel().getColumn(0).setResizable(false);
			tblChiTietHD.getColumnModel().getColumn(1).setResizable(false);
			tblChiTietHD.getColumnModel().getColumn(2).setResizable(false);
		}

		btnXuatHoaDon.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		btnXuatHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon/in.PNG"))); // NOI18N
		btnXuatHoaDon.setText("Xuất hóa đơn");
		btnXuatHoaDon.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnXuatHoaDonActionPerformed(evt);
			}
		});

		pnlTTHoaDon.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

		lblMaHoaDon.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblMaHoaDon.setText("Mã hóa đơn");
		lblMaHoaDon.setMaximumSize(new java.awt.Dimension(67, 20));

		txtMaHoaDon.setPreferredSize(new java.awt.Dimension(7, 28));

		lblMaNV.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblMaNV.setText("Nhân viên");

		txtMaNV.setMinimumSize(new java.awt.Dimension(7, 25));
		txtMaNV.setPreferredSize(new java.awt.Dimension(7, 28));

		lblMaKhacHang.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblMaKhacHang.setText("Khách hàng");

		cmbTenKH.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		cmbTenKH.setPreferredSize(new java.awt.Dimension(34, 35));
		cmbTenKH.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cmbTenKHActionPerformed(evt);
			}
		});

		lblDiaChiKH.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblDiaChiKH.setText("Số điện thoại khách hàng: ");

		txtSDTKH.setPreferredSize(new java.awt.Dimension(7, 28));

		lblSDTKH.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblSDTKH.setText("Địa chỉ khách hàng: ");

		txtDiaChiKH.setPreferredSize(new java.awt.Dimension(7, 28));
		txtDiaChiKH.setRequestFocusEnabled(false);

		lblTongTien.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblTongTien.setText("Tổng tiền");

		txtTongTien.setEditable(false);
		txtTongTien.setPreferredSize(new java.awt.Dimension(7, 28));

		lblDVT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblDVT.setText("VND");

		lblNgayLap.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblNgayLap.setText("Ngày lập");

		jDateChooser1.setPreferredSize(new java.awt.Dimension(74, 28));

		btnThemHoaDon.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		btnThemHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon/btn_add.png"))); // NOI18N
		btnThemHoaDon.setText("Thêm hóa đơn");
		btnThemHoaDon.setPreferredSize(new java.awt.Dimension(135, 33));
		btnThemHoaDon.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnThemHoaDonActionPerformed(evt);
			}
		});

		btnNhapLaiHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon/edit-clear.png"))); // NOI18N
		btnNhapLaiHoaDon.setText("Nhập lại");
		btnNhapLaiHoaDon.setPreferredSize(new java.awt.Dimension(91, 28));
		btnNhapLaiHoaDon.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnNhapLaiHoaDonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout pnlTTHoaDonLayout = new javax.swing.GroupLayout(pnlTTHoaDon);
		pnlTTHoaDon.setLayout(pnlTTHoaDonLayout);
		pnlTTHoaDonLayout.setHorizontalGroup(pnlTTHoaDonLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlTTHoaDonLayout.createSequentialGroup().addContainerGap().addGroup(pnlTTHoaDonLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(pnlTTHoaDonLayout.createSequentialGroup().addGroup(pnlTTHoaDonLayout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(lblMaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lblMaNV).addComponent(lblNgayLap)).addGap(100, 100, 100).addGroup(
										pnlTTHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 167,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(txtMaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 167,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE,
														211, javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGroup(pnlTTHoaDonLayout.createSequentialGroup()
								.addGroup(pnlTTHoaDonLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 62,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(lblDiaChiKH).addComponent(lblSDTKH).addComponent(lblMaKhacHang))
								.addGap(18, 18, 18)
								.addGroup(pnlTTHoaDonLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(txtSDTKH, javax.swing.GroupLayout.PREFERRED_SIZE, 172,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(cmbTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 172,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGroup(pnlTTHoaDonLayout.createSequentialGroup().addGroup(pnlTTHoaDonLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 177,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGroup(pnlTTHoaDonLayout.createSequentialGroup().addGap(47, 47, 47)
														.addComponent(btnNhapLaiHoaDon,
																javax.swing.GroupLayout.PREFERRED_SIZE, 114,
																javax.swing.GroupLayout.PREFERRED_SIZE)))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(lblDVT, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addComponent(txtDiaChiKH, javax.swing.GroupLayout.PREFERRED_SIZE, 285,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGroup(pnlTTHoaDonLayout.createSequentialGroup().addGap(61, 61, 61).addComponent(
								btnThemHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(84, Short.MAX_VALUE)));
		pnlTTHoaDonLayout.setVerticalGroup(pnlTTHoaDonLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlTTHoaDonLayout.createSequentialGroup().addContainerGap()
						.addGroup(pnlTTHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(txtMaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lblMaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(10, 10, 10)
						.addGroup(pnlTTHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lblMaNV))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(pnlTTHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lblNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, 20,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(pnlTTHoaDonLayout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addGroup(pnlTTHoaDonLayout.createSequentialGroup().addGap(10, 10, 10)
										.addComponent(cmbTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(txtSDTKH, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(pnlTTHoaDonLayout.createSequentialGroup().addGap(22, 22, 22)
										.addComponent(lblMaKhacHang)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(lblDiaChiKH)))
						.addGap(14, 14, 14)
						.addGroup(pnlTTHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(txtDiaChiKH, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lblSDTKH))
						.addGroup(pnlTTHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(pnlTTHoaDonLayout.createSequentialGroup().addGap(18, 18, 18)
										.addComponent(lblDVT))
								.addGroup(pnlTTHoaDonLayout.createSequentialGroup().addGap(10, 10, 10).addComponent(
										txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										pnlTTHoaDonLayout.createSequentialGroup()
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(lblTongTien)))
						.addGap(18, 18, 18)
						.addGroup(pnlTTHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(btnThemHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnNhapLaiHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 33,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		pnlTTXeMay.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

		lblTenXe.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblTenXe.setText("Tên xe máy");

		cmbTenXe.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		cmbTenXe.setPreferredSize(new java.awt.Dimension(34, 28));
		cmbTenXe.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cmbTenXeActionPerformed(evt);
			}
		});

		jLabel1.setText("Mã xe");

		txtMaXe.setRequestFocusEnabled(false);

		lblGiaXe.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblGiaXe.setText("Giá xe");

		txtGiaXe.setEditable(false);
		txtGiaXe.setPreferredSize(new java.awt.Dimension(7, 25));

		lblSoLuong.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblSoLuong.setText("Số lượng");

		txtSoLuong.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyReleased(java.awt.event.KeyEvent evt) {
				txtSoLuongKeyReleased(evt);
			}
		});

		lblThue.setText("Lệ phí trước bạ");

		txtThue.setPreferredSize(new java.awt.Dimension(7, 25));

		lblThanhTien.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblThanhTien.setText("Thành tiền");

		txtThanhTien.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		txtThanhTien.setPreferredSize(new java.awt.Dimension(7, 25));

		lblDVT4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblDVT4.setText("VND");

		lblDVT3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblDVT3.setText("Chiếc");

		lblDVT5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblDVT5.setText("VND");

		lblDVT2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		lblDVT2.setText("VND");

		btnThemCTHD.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		btnThemCTHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon/Button-Add-icon.png"))); // NOI18N
		btnThemCTHD.setText("Thêm xe vào hóa đơn");
		btnThemCTHD.setPreferredSize(new java.awt.Dimension(175, 33));
		btnThemCTHD.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnThemCTHDActionPerformed(evt);
			}
		});

		btnNhapLaiCTHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon/edit-clear.png"))); // NOI18N
		btnNhapLaiCTHD.setText("Nhập lại");
		btnNhapLaiCTHD.setPreferredSize(new java.awt.Dimension(91, 33));
		btnNhapLaiCTHD.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnNhapLaiCTHDActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout pnlTTXeMayLayout = new javax.swing.GroupLayout(pnlTTXeMay);
		pnlTTXeMay.setLayout(pnlTTXeMayLayout);
		pnlTTXeMayLayout.setHorizontalGroup(pnlTTXeMayLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlTTXeMayLayout.createSequentialGroup().addGap(22, 22, 22).addGroup(pnlTTXeMayLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblGiaXe)
						.addComponent(lblSoLuong)
						.addGroup(pnlTTXeMayLayout.createSequentialGroup().addGroup(pnlTTXeMayLayout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(pnlTTXeMayLayout.createSequentialGroup()
										.addGroup(pnlTTXeMayLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(lblTenXe).addComponent(lblThanhTien).addComponent(jLabel1,
														javax.swing.GroupLayout.PREFERRED_SIZE, 39,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(23, 23, 23))
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTTXeMayLayout
										.createSequentialGroup()
										.addComponent(lblThue, javax.swing.GroupLayout.PREFERRED_SIZE, 83,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
								.addGroup(pnlTTXeMayLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(txtMaXe, javax.swing.GroupLayout.PREFERRED_SIZE, 179,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGroup(pnlTTXeMayLayout.createSequentialGroup()
												.addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 179,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(lblDVT3, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(pnlTTXeMayLayout.createSequentialGroup()
												.addComponent(txtThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 182,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(lblDVT5))
										.addComponent(cmbTenXe, javax.swing.GroupLayout.PREFERRED_SIZE, 179,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGroup(pnlTTXeMayLayout.createSequentialGroup()
												.addComponent(txtGiaXe, javax.swing.GroupLayout.PREFERRED_SIZE, 179,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(lblDVT2))
										.addGroup(pnlTTXeMayLayout.createSequentialGroup()
												.addComponent(txtThue, javax.swing.GroupLayout.PREFERRED_SIZE, 182,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(lblDVT4, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
														javax.swing.GroupLayout.PREFERRED_SIZE))))
						.addGroup(pnlTTXeMayLayout.createSequentialGroup()
								.addComponent(btnThemCTHD, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(btnNhapLaiCTHD, javax.swing.GroupLayout.PREFERRED_SIZE, 114,
										javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(64, Short.MAX_VALUE)));
		pnlTTXeMayLayout.setVerticalGroup(pnlTTXeMayLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlTTXeMayLayout.createSequentialGroup().addGroup(pnlTTXeMayLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(pnlTTXeMayLayout.createSequentialGroup().addContainerGap().addGroup(pnlTTXeMayLayout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(cmbTenXe, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lblTenXe)).addGap(18, 18, 18)
								.addComponent(txtMaXe, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(
										pnlTTXeMayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(txtGiaXe, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(lblDVT2)))
						.addGroup(pnlTTXeMayLayout.createSequentialGroup().addGap(52, 52, 52)
								.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18).addComponent(lblGiaXe, javax.swing.GroupLayout.PREFERRED_SIZE, 20,
										javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGroup(pnlTTXeMayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(pnlTTXeMayLayout.createSequentialGroup().addGap(21, 21, 21)
										.addComponent(lblSoLuong))
								.addGroup(pnlTTXeMayLayout.createSequentialGroup()
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(pnlTTXeMayLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(lblDVT3, javax.swing.GroupLayout.PREFERRED_SIZE, 20,
														javax.swing.GroupLayout.PREFERRED_SIZE))))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(pnlTTXeMayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(lblThue)
								.addComponent(txtThue, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lblDVT4))
						.addGap(14, 14, 14)
						.addGroup(pnlTTXeMayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(lblThanhTien).addGroup(
										pnlTTXeMayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(txtThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(lblDVT5)))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(pnlTTXeMayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(btnThemCTHD, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnNhapLaiCTHD, javax.swing.GroupLayout.PREFERRED_SIZE, 33,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap()));

		javax.swing.GroupLayout pnlTable2Layout = new javax.swing.GroupLayout(pnlTable2);
		pnlTable2.setLayout(pnlTable2Layout);
		pnlTable2Layout.setHorizontalGroup(pnlTable2Layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTable2Layout.createSequentialGroup()
						.addContainerGap(47, Short.MAX_VALUE)
						.addGroup(pnlTable2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(btnXuatHoaDon)
								.addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 982,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(pnlTable2Layout.createSequentialGroup()
										.addComponent(pnlTTHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(28, 28, 28).addComponent(pnlTTXeMay,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGap(54, 54, 54)));
		pnlTable2Layout.setVerticalGroup(pnlTable2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlTable2Layout.createSequentialGroup().addContainerGap()
						.addGroup(pnlTable2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(pnlTTHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(pnlTTXeMay, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addGap(18, 18, 18)
						.addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 244,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(btnXuatHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 47,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout
						.createSequentialGroup().addContainerGap().addComponent(pnlTable2,
								javax.swing.GroupLayout.PREFERRED_SIZE, 1085, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(48, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addComponent(pnlTable2, javax.swing.GroupLayout.PREFERRED_SIZE, 666,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		AutoCompleteDecorator.decorate(cmbTenKH);
		AutoCompleteDecorator.decorate(cmbTenXe);
	}// </editor-fold>//GEN-END:initComponents

	public void SetTongTien(String MaHoaDon) {
		String kiemtracount = "select count(*) as SoChiTietPhieuMua"
				+ " from HoaDon,ChiTietHoaDon where HoaDon.maHD=ChiTietHoaDon.maHD and HoaDOn.maHD='" + MaHoaDon + "'";

		Locale locale = new Locale("vi", "VN");
		NumberFormat fm = NumberFormat.getCurrencyInstance(locale);
		PreparedStatement pst;
		PreparedStatement pst1;
		ResultSet rs;
		ResultSet rs1;
		Connection conn = ConnectionDB.openConnection();
		try {
			pst1 = conn.prepareCall(kiemtracount);
			rs1 = pst1.executeQuery();
			int count = 0;
			if (rs1.next()) {
				count = rs1.getInt("SoChiTietPhieuMua");
				String tinhtien = "select sum(ChiTietHoaDon.thanhTien) as TongTienHienTai,HoaDon.maHD from HoaDon,ChiTietHoaDon "
						+ "where HoaDon.maHD=ChiTietHoaDon.maHD" + " and HoaDon.maHD='" + MaHoaDon
						+ "' group by HoaDon.maHD";
				if (count != 0) {
					try {
						pst = conn.prepareCall(tinhtien);
						rs = pst.executeQuery();
						float ttht = 0;

						if (rs.next()) {
							ttht = rs.getFloat("TongTienHienTai");
							txtThanhTien.setText(fm.format(ttht));
							String ctv = "update HoaDon set tongTien='" + ttht + "' where maHD='" + MaHoaDon + "'";
							pst = conn.prepareCall(ctv);
							pst.executeUpdate();
							txtTongTien.setText(String.valueOf(ttht));
							txtTongTien.setText(fm.format(ttht));
						}
					} catch (SQLException ex) {
						Logger.getLogger(HoaDon_model.class.getName()).log(Level.SEVERE, null, ex);
					}
				} else {
					String ctv = "update HoaDon set tongTien=0 where maHD='" + MaHoaDon + "'";
					pst = conn.prepareCall(ctv);
					pst.executeUpdate();
				}

			}
		} catch (SQLException ex) {
			Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
		}

	}

	public void laymaCT_HD(String mahd) {
		Locale locale = new Locale("vi", "VN");
		NumberFormat fm = NumberFormat.getCurrencyInstance(locale);
		String get_ct_hd = "SELECT * FROM ChiTietHoaDon where maHD='" + mahd + "'";
		Connection conn = ConnectionDB.openConnection();
		Vector col_ct = new Vector();
		data = new Vector();
		int i = 1;
		col_ct.add("STT");
		col_ct.add("Mã hóa đơn");
		col_ct.add("Tên xe máy");
		col_ct.add("Đơn giá");
		col_ct.add("Số lượng");
		col_ct.add("Lệ phí trước bạ");
		col_ct.add("Thành tiền");
		try {
			PreparedStatement pst = conn.prepareCall(get_ct_hd);
			ResultSet rs = pst.executeQuery();
			while (rs.next()) {
				Vector row_vl = new Vector();
				row_vl.add(i++);
				row_vl.add(rs.getString("maHD"));
				ob_id_xe = hd_md.getIDxe(rs.getString("maXe"));
				row_vl.add(ob_id_xe.get(0).getTenXe());
				row_vl.add(fm.format(rs.getFloat("donGia")));
				row_vl.add(rs.getInt("soLuong"));
				row_vl.add(fm.format(rs.getInt("thueXe")));
				row_vl.add(fm.format(rs.getFloat("thanhTien")));
				data.add(row_vl);
			}
		} catch (SQLException ex) {
			Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
		}
		md2 = new DefaultTableModel(data, col_ct);
		tblChiTietHD.setModel(md2);

	}

	public float GetGiaXe(String Maxe) {
		float Gia = 0;
		String cautruyvan = "select * from XeMay where maXe='" + Maxe + "'";
		Connection conn = ConnectionDB.openConnection();
		try {
			PreparedStatement pst;
			pst = conn.prepareCall(cautruyvan);
			ResultSet rs = pst.executeQuery();
			while (rs.next()) {
				Gia = rs.getFloat("giaXe");
			}
		} catch (SQLException ex) {
			Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
		}
		return Gia;
	}

	public String GetCbbSelected() {
		int sele = cmbTenXe.getSelectedIndex();
		xemay = hd_md.getCombo_xe();
		return xemay.get(sele).getMaXe();
	}

//	public String GetCbbSelectedKH() {
//		int sele = cmbTenKH.getSelectedIndex();
//		khachhang = hd_md.getComboKH();
//		return khachhang.get(sele).getMaKH();
//	}
	private void tblChitiet_dhMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tblChitiet_dhMouseClicked
		// TODO add your handling code here:
		ob_ct = hd_md.get_ct();
		HoaDon_entity hd = new HoaDon_entity();
		int row = tblChiTietHD.getSelectedRow();
		cmbTenXe.setSelectedItem(md2.getValueAt(row, 2).toString());
		txtGiaXe.setText(md2.getValueAt(row, 3).toString());
		txtSoLuong.setText(md2.getValueAt(row, 4).toString());
		txtThue.setText(md2.getValueAt(row, 5).toString());
		txtThanhTien.setText(md2.getValueAt(row, 6).toString());

	}// GEN-LAST:event_tblChitiet_dhMouseClicked

	private void btnThemCTHDActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnThemCTHDActionPerformed
		// TODO add your handling code here:
		xemay = hd_md.getCombo_xe();
		String mahd2 = txtMaHoaDon.getText();

		XeMay_entity xe = new XeMay_entity();
		String maXe = txtMaXe.getText();
		String giast = txtGiaXe.getText();
		boolean check = true;

		float gia = 0;
		String slst = txtSoLuong.getText();
		int sl = 0;
		String thue = txtThue.getText();

		if (mahd2.equals("")) {
			JOptionPane.showMessageDialog(null, "Bạn chưa lập hóa đơn!!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
		} else {
			try {
				gia = Float.parseFloat(giast);
				check = true;
			} catch (Exception e) {
				JOptionPane.showMessageDialog(null, "Giá phải là số", "Lỗi", JOptionPane.ERROR_MESSAGE);
				check = false;

			}
			try {
				sl = Integer.parseInt(slst);
				check = true;
			} catch (Exception e) {
				JOptionPane.showMessageDialog(null, "Số lượng là chữ số", "Lỗi", JOptionPane.ERROR_MESSAGE);
				check = false;
			}

			if (check == true) {

				String up_ton_kho = "UPDATE XeMay SET soLuongXe=? Where maXe=?";
				PreparedStatement pst;
				ResultSet rs;
				Connection conn = ConnectionDB.openConnection();
				HoaDon_entity hd_en = new HoaDon_entity();
				hd_en.setMaHoaDon(mahd2);
				hd_en.setMaXe(maXe);
				hd_en.setSoLuong(sl);
				hd_en.setDonGia(gia);
				hd_en.setThanhTien((float) (sl * gia * 1.02));
				hd_en.setThueXe((float) (sl * gia * 0.02));

				if (sltk != 0) {

					if (sl <= sltk) {
						try {
							int slcd;
							slcd = sltk - sl;
							pst = conn.prepareCall(up_ton_kho);
							pst.setInt(1, slcd);
							pst.setString(2, maXe);
							pst.executeUpdate();
						} catch (SQLException ex) {
							Logger.getLogger(HoaDon_model.class.getName()).log(Level.SEVERE, null, ex);
						}

						if (hd_md.add_ct_dh(hd_en)) {
							JOptionPane.showMessageDialog(null, "Thêm thành công", "Thành công",
									JOptionPane.INFORMATION_MESSAGE);
							//
							laymaCT_HD(mahd2);
							SetTongTien(mahd2);
							btnNhapLaiCTHDActionPerformed(evt);
						} else {
							JOptionPane.showMessageDialog(null, "Lỗi thêm chi tiết hóa đơn", "Lỗi",
									JOptionPane.ERROR_MESSAGE);
						}

					} else {
						JOptionPane.showMessageDialog(null, "Không đủ số lượng xe", "Lỗi", JOptionPane.ERROR_MESSAGE);
					}
				} else if (sltk == 0) {
					JOptionPane.showMessageDialog(null, "Xe máy không còn hàng", "Lỗi", JOptionPane.ERROR_MESSAGE);
				}

			}

		}
	}// GEN-LAST:event_btnThemCTHDActionPerformed

	private void txtSoLuongKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtSoLuongKeyReleased
		// TODO add your handling code here:
		Locale locale = new Locale("vi", "VN");
		NumberFormat fm = NumberFormat.getCurrencyInstance(locale);
		ob_ct = hd_md.get_ct();
		int soluong = 0;
		float gia = 0;
		float tien;
		float thue = 0;
		try {
			soluong = Integer.parseInt(txtSoLuong.getText());
			gia = Float.parseFloat(txtGiaXe.getText());
			thue = Float.parseFloat(txtThue.getText());
		} catch (Exception e) {
		}
		thue = (float) (soluong * gia * 0.02);
		tien = gia * soluong + thue;
		txtThue.setText(fm.format(thue));
		txtThanhTien.setText(fm.format(tien));
	}// GEN-LAST:event_txtSoLuongKeyReleased

	private void cmbTenXeActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		PreparedStatement pst;
		ResultSet rs;
		Connection conn = ConnectionDB.openConnection();
		int xeSelect = cmbTenXe.getSelectedIndex();
		String intXe = xemay.get(xeSelect).getMaXe();
		Locale locale = new Locale("vi", "VN");
		NumberFormat fm = NumberFormat.getCurrencyInstance(locale);
		float gia = GetGiaXe(GetCbbSelected());
		txtGiaXe.setText(String.valueOf(gia));
		txtMaXe.setText(intXe);

		float giatien = 0;
		int sl = 0;
		float tien;
		try {
			giatien = Float.valueOf(txtGiaXe.getText());
			sl = Integer.parseInt(txtThanhTien.getText());
		} catch (Exception e) {
		}
		tien = (float) (giatien * sl * 1.02);
		txtThanhTien.setText(String.valueOf(fm.format(tien)));

		String so_ton_kho = "SELECT soLuongXe FROM XeMay where maXe=?";

		try {
			pst = conn.prepareCall(so_ton_kho);
			pst.setString(1, intXe);
			rs = pst.executeQuery();

			while (rs.next()) {
				sltk = rs.getInt("soLuongXe");
			}
		} catch (SQLException ex) {
			Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	private void cmbTenKHActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cmbTenXeActionPerformed
		// TODO add your handling code here:
		PreparedStatement pst;
		ResultSet rs;
		Connection conn = ConnectionDB.openConnection();
		int khSelect = cmbTenKH.getSelectedIndex();
		String intKH = khachhang.get(khSelect).getSoDienThoai();
		String diachiKH = khachhang.get(khSelect).getDiachi();
		txtSDTKH.setText(intKH);
		txtDiaChiKH.setText(diachiKH);

	}// GEN-LAST:event_cmbTenXeActionPerformed

	private void btnXuatHoaDonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnXuatHoaDonActionPerformed
		// TODO add your handling code here:
		Connection coon = new ConnectionDB().openConnection();
		String ma_hd = txtMaHoaDon.getText();
		String ma_ctx = txtMaHoaDon.getText();
		int row = tblChiTietHD.getRowCount();
		String tt = txtTongTien.getText();
		String sdtKH = txtSDTKH.getText();
		String dc = txtDiaChiKH.getText();
		if (txtMaHoaDon.getText().equals("")) {
			JOptionPane.showMessageDialog(null, "Bạn chưa lập hóa đơn!!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
		} else if (tt.equals("")) {
			JOptionPane.showMessageDialog(null, "Hóa đơn trống!!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
		} else {
			ob_xuat = hd_md.hoa_don_output(ma_hd, ma_ctx);
			List<Map<String, ?>> datax = new ArrayList<>();
			for (HoaDon_entity ob : ob_xuat) {
				Map<String, Object> row_x = new HashMap<String, Object>();
				row_x.put("maHD", ob.getMaHoaDon());
				ob_kh = hd_md.getIDkhachhang(ob.getMaKH());
				row_x.put("maKH", cmbTenKH.getSelectedItem());
				row_x.put("diaChi", txtDiaChiKH.getText());
				row_x.put("soDienThoai", txtSDTKH.getText());
				ob_nv = hd_md.getIDnhanvien(ob.getMaNV());
				row_x.put("maNV", ob_nv.get(0).getMaNV());
				ob_id_xe = hd_md.getIDxe(ob.getMaXe());
				row_x.put("maXe", ob_id_xe.get(0).getTenXe());
				row_x.put("donGia", ob.getDonGia());
				row_x.put("soLuong", ob.getSoLuong());
				row_x.put("thanhTien", ob.getThanhTien());
				row_x.put("thueXe", ob.getThueXe());
				datax.add(row_x);
			}
			JRDataSource jRDataSource = new JRBeanCollectionDataSource(datax);
			String sourceName = "src\\Ireport\\XuatHoaDon.jrxml";
			try {
				JasperReport rp = JasperCompileManager.compileReport(sourceName);
				JasperPrint filledReport = JasperFillManager.fillReport(rp, null, jRDataSource);
				JasperViewer jw = new JasperViewer(filledReport);
				jw.setVisible(true);
				HoaDon_entity hd_x = new HoaDon_entity();
				laymaCT_HD(ma_hd);

			} catch (JRException ex) {
				Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
			}
			md2 = new DefaultTableModel();
			tblChiTietHD.setModel(md2);
			txtMaHoaDon.setText(null);
			txtTongTien.setText(null);

		}
	}// GEN-LAST:event_btnXuatHoaDonActionPerformed

	private void btnNhapLaiHoaDonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		txtMaHoaDon.setText(null);
		txtTongTien.setText(null);

	}

	private void tblChiTietHDMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tblChiTietHDMouseClicked
		// TODO add your handling code here:
		tblChitiet_dhMouseClicked(evt);
	}// GEN-LAST:event_tblChiTietHDMouseClicked

	private void btnNhapLaiCTHDActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnNhapLaiHoaDonActionPerformed
		// TODO add your handling code here:
		txtThanhTien.setText(null);
		txtGiaXe.setText(null);
		txtSoLuong.setText(null);
		txtThue.setText(null);
		txtMaXe.setText(null);
	}// GEN-LAST:event_btnNhapLaiHoaDonActionPerformed

	private void btnThemHoaDonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnThemHoaDonActionPerformed
		// TODO add your handling code here:
		comboKH();
		nhanvien = hd_md.getNV();
		khachhang = hd_md.getComboKH();
		ob_hd = hd_md.get_hd();
		String ma_dh = txtMaHoaDon.getText();
		String ma_nv = txtMaNV.getText();
		ob_nv = hd_md.getNV();
		int kh = cmbTenKH.getSelectedIndex();
		String com_kh = khachhang.get(kh).getMaKH();
		Date date = jDateChooser1.getDate();
		String date_input = new SimpleDateFormat("yyyy-MM-dd").format(date);
		String tt = txtTongTien.getText();
		float thanhtien = 0;
		try {
			thanhtien = Float.parseFloat(tt);
		} catch (Exception e) {
		}
		HoaDon_entity hd_et = new HoaDon_entity();
		// hd_et.setMaHoaDon("");
		hd_et.setMaNV(ma_nv);
		hd_et.setMaKH(com_kh);
		hd_et.setNgayLapHoaDon(date_input);
		hd_et.setTongTien(thanhtien);

		if (date.equals(null)) {
			JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "LỖI", JOptionPane.ERROR_MESSAGE);
		} else if (hd_md.add_hd(hd_et)) {
			JOptionPane.showMessageDialog(null, "Thêm thành công", "THÀNH CÔNG", JOptionPane.INFORMATION_MESSAGE);
			hienMaHD();
		} else {
			JOptionPane.showMessageDialog(null, "Lỗi thông tin nhập", "LỖI", JOptionPane.ERROR_MESSAGE);
		}
	}// GEN-LAST:event_btnThemHoaDonActionPerformed

	public void hienMaHD() {
		hoadon = hd_md.get_hd();
		for (HoaDon_entity ob : hoadon) {
			txtMaHoaDon.setText(ob.getMaHoaDon());
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnNhapLaiCTHD;
	private javax.swing.JButton btnNhapLaiHoaDon;
	private javax.swing.JButton btnThemCTHD;
	private javax.swing.JButton btnThemHoaDon;
	private javax.swing.JButton btnXuatHoaDon;
	private javax.swing.JComboBox cmbTenKH;
	private javax.swing.JComboBox cmbTenXe;
	private com.toedter.calendar.JDateChooser jDateChooser1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JScrollPane jScrollPane6;
	private javax.swing.JLabel lblDVT;
	private javax.swing.JLabel lblDVT2;
	private javax.swing.JLabel lblDVT3;
	private javax.swing.JLabel lblDVT4;
	private javax.swing.JLabel lblDVT5;
	private javax.swing.JLabel lblDiaChiKH;
	private javax.swing.JLabel lblGiaXe;
	private javax.swing.JLabel lblMaHoaDon;
	private javax.swing.JLabel lblMaKhacHang;
	private javax.swing.JLabel lblMaNV;
	private javax.swing.JLabel lblNgayLap;
	private javax.swing.JLabel lblSDTKH;
	private javax.swing.JLabel lblSoLuong;
	private javax.swing.JLabel lblTenXe;
	private javax.swing.JLabel lblThanhTien;
	private javax.swing.JLabel lblThue;
	private javax.swing.JLabel lblTongTien;
	private javax.swing.JPanel pnlTTHoaDon;
	private javax.swing.JPanel pnlTTXeMay;
	private javax.swing.JPanel pnlTable2;
	private javax.swing.JTable tblChiTietHD;
	private javax.swing.JTextField txtDiaChiKH;
	private javax.swing.JTextField txtGiaXe;
	private javax.swing.JTextField txtMaHoaDon;
	private javax.swing.JTextField txtMaNV;
	private javax.swing.JTextField txtMaXe;
	private javax.swing.JTextField txtSDTKH;
	private javax.swing.JTextField txtSoLuong;
	private javax.swing.JTextField txtThanhTien;
	private javax.swing.JTextField txtThue;
	private javax.swing.JTextField txtTongTien;
	// End of variables declaration//GEN-END:variables

}
