/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Jpanel_Form_QuanLy;

import Connection.ConnectionDB;
import Entities.HangXe_entity;
import Entities.HoaDon_entity;
import Entities.KhachHang_entity;
import Entities.LoaiXe_entity;
import Entities.MauXe_entity;
import Entities.NhanVien_entity;
import Entities.XeMay_entity;
import Jpanel_Form_NhanVien.HoaDon;
import Model.HoaDon_model;
import Model.NhanVien_model;
import Model.QLHD_model;
import Model.XeMay_model;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author phanb
 */
public class QuanLyHoaDon extends javax.swing.JPanel {

    /**
     * Creates new form TimKiemNQL
     */
    ArrayList<HoaDon_entity> ob_hd = new ArrayList<>();
    ArrayList<HoaDon_entity> ob_ct = new ArrayList<>();
    ArrayList<HoaDon_entity> ob_tt = new ArrayList<>();
    HoaDon_entity hd_e = new HoaDon_entity();
    QLHD_model hd_md = new QLHD_model();
    ArrayList<NhanVien_entity> ob_nv = new ArrayList<>();
    ArrayList<KhachHang_entity> ob_kh = new ArrayList<>();
    ArrayList<NhanVien_entity> nhanvien = new ArrayList<>();
    ArrayList<KhachHang_entity> khachhang = new ArrayList<>();
    ArrayList<HoaDon_entity> hoadon = new ArrayList<>();
    ArrayList<XeMay_entity> ob_id_xe = new ArrayList<>();
    ArrayList<XeMay_entity> xemay = new ArrayList<>();
    List<HoaDon_entity> ob_xuat = new ArrayList<>();
    DefaultTableModel md = new DefaultTableModel();
    DefaultTableModel md2 = new DefaultTableModel();
    HoaDon_model hoadonmd = new HoaDon_model();
    Vector data = new Vector();
    Vector data_ct = new Vector();
    public QuanLyHoaDon() {
        initComponents();
        hoa_don_DT();
        comboKH();
        comboNV();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHD = new javax.swing.JLabel();
        lblCTHD = new javax.swing.JLabel();
        lblTieuDe1 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        tblHD = new javax.swing.JTable();
        jScrollPane14 = new javax.swing.JScrollPane();
        tblCTHD = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblMaHD = new javax.swing.JLabel();
        lblKH = new javax.swing.JLabel();
        lblNV = new javax.swing.JLabel();
        txtMaHD = new javax.swing.JTextField();
        cboNV = new javax.swing.JComboBox<>();
        cboKH = new javax.swing.JComboBox<>();
        btnTimMa = new javax.swing.JButton();
        btnTimNV = new javax.swing.JButton();
        btnTimKH = new javax.swing.JButton();

        lblHD.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblHD.setForeground(new java.awt.Color(204, 0, 0));
        lblHD.setText("Danh sách chi tiết hóa đơn");

        lblCTHD.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblCTHD.setForeground(new java.awt.Color(153, 0, 0));
        lblCTHD.setText("Danh sách hóa đơn");

        lblTieuDe1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblTieuDe1.setForeground(new java.awt.Color(204, 0, 0));
        lblTieuDe1.setText("Tìm kiếm");

        tblHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane13.setViewportView(tblHD);

        tblCTHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "Mã hóa đơn", "Tên xe máy", "Đơn giá","Số lượng","Lệ phí trước bạ","Thành tiền"
            }
        ));
        jScrollPane14.setViewportView(tblCTHD);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblMaHD.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        lblMaHD.setText("Mã hóa đơn");

        lblKH.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        lblKH.setText("Khách hàng");

        lblNV.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        lblNV.setText("Nhân viên");

        txtMaHD.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        cboNV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        cboKH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        btnTimMa.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        btnTimMa.setText("Tìm");

        btnTimNV.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        btnTimNV.setText("Tìm");

        btnTimKH.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        btnTimKH.setText("Tìm");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKH, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNV, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cboKH, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTimKH))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTimMa))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cboNV, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTimNV)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaHD)
                    .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimMa, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKH)
                    .addComponent(cboKH, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKH, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboNV, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNV)
                    .addComponent(btnTimNV, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHD, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblTieuDe1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(253, 253, 253))
                            .addComponent(lblCTHD, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 1078, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(408, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHD)
                    .addComponent(lblTieuDe1))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(lblCTHD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(71, 71, 71)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(424, Short.MAX_VALUE)))
        );
        tblHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
		btnTimMa.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				timKiemHoaDon_MaHD();
			}
		});
		btnTimKH.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				timKiemHoaDon_TenKH();
			}
		});
		btnTimNV.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				timKiemHoaDon_TenNV();
			}
		});
        AutoCompleteDecorator.decorate(cboKH);
        AutoCompleteDecorator.decorate(cboNV);
    }// </editor-fold>//GEN-END:initComponents
    
    public void comboKH() {
        khachhang = hd_md.getComboKH();
        for (KhachHang_entity ob : khachhang) {
            cboKH.addItem(ob.getHoTenKH());
        }
    }
    public void comboNV() {
        nhanvien = hd_md.getComboNV();
        for (NhanVien_entity ob : nhanvien) {
            cboNV.addItem(ob.getHoTen());
        }
    }
    
    public void hoa_don_DT() {
        Locale locale = new Locale("vi", "VN");
        NumberFormat fm = new DecimalFormat("#,###,###");
        // NumberFormat fm = NumberFormat.getCurrencyInstance(locale);
        ob_hd = hd_md.get_hd();
        Vector col = new Vector();
        data = new Vector();
        int i = 1;
        col.add("STT");
        col.add("Mã hóa đơn");
        col.add("Tên khách hàng");
        col.add("Tên nhân viên");
        col.add("Ngày lập");
        col.add("Tổng tiền");

        for (HoaDon_entity ob : ob_hd) {

            Vector row = new Vector();
            row.add(i++);
            row.add(ob.getMaHoaDon());
            ob_kh = hd_md.getIDkhachhang(ob.getMaKH());
            row.add(ob_kh.get(0).getHoTenKH());
            ob_nv = hd_md.getIDnhanvien(ob.getMaNV());
            row.add(ob_nv.get(0).getHoTen());
            row.add(ob.getNgayLapHoaDon());
            row.add(fm.format(ob.getTongTien()));
            row.add(fm.format(ob.getThueXe()));
            data.add(row);

        }
        md = new DefaultTableModel(data, col);
        tblHD.setModel(md);
    }
	private void timKiemHoaDon_MaHD() {
		String timMa = txtMaHD.getText().trim();
		if (timMa.equals("")) {
			JOptionPane.showMessageDialog(null, "Chọn mã hóa đơn cần tìm!", "Thông Báo",
					JOptionPane.INFORMATION_MESSAGE);
		} else{
			timMaHD(timMa);
		}

	}

	public void timMaHD(String mahd) {
		Locale locale = new Locale("vi", "VN");
		NumberFormat fm = NumberFormat.getCurrencyInstance(locale);
		String gethd = "SELECT * FROM HoaDon where maHD='" + mahd + "'";
		Connection conn = ConnectionDB.openConnection();
		Vector col_ct = new Vector();
		data = new Vector();
		int i = 1;
		col_ct.add("STT");
		col_ct.add("Mã hóa đơn");
		col_ct.add("Tên khách hàng");
		col_ct.add("Tên nhân viên");
		col_ct.add("Ngày lập");
		col_ct.add("Tổng tiền");
		try {
			PreparedStatement pst = conn.prepareCall(gethd);
			ResultSet rs = pst.executeQuery();
			while (rs.next()) {
				Vector row_vl = new Vector();
				row_vl.add(i++);
				row_vl.add(rs.getString("maHD"));
				
				khachhang = hoadonmd.getIDkhachhang(rs.getString("maKH"));
				row_vl.add(khachhang.get(0).getHoTenKH());
				nhanvien = hd_md.getIDnhanvien(rs.getString("maNV"));
				row_vl.add(nhanvien.get(0).getHoTen());
				row_vl.add(rs.getString("ngayLap"));
				row_vl.add(fm.format(rs.getFloat("tongTien")) );				
				data.add(row_vl);
			}
		} catch (SQLException ex) {
			Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
		}
		md2 = new DefaultTableModel(data, col_ct);
		tblHD.setModel(md2);

	}
	//TÌM THEO TÊN KHÁCH HÀNG
//	private void timKiemHoaDonKH() {
//		
//		int khSelect = cboKH.getSelectedIndex();
//		String maKH = khachhang.get(khSelect).getHoTenKH();
//		if (maKH.equals("")) {
//			JOptionPane.showMessageDialog(null, "Chọn khách hàng cần tìm hóa đơn!", "Thông Báo",
//					JOptionPane.INFORMATION_MESSAGE);
//		} else {
//			timTheoKH(maKH);
//		}
//	}
//	public void timTheoKH(String maKH) {
//		Locale locale = new Locale("vi", "VN");
//		NumberFormat fm = NumberFormat.getCurrencyInstance(locale);
//		String gethd = "SELECT * FROM HoaDon,KhachHang where HoaDon.maKH=KhachHang.maKH and hoTenKH like N'%" + maKH + "%'";
//		Connection conn = ConnectionDB.openConnection();
//		Vector col_ct = new Vector();
//		data = new Vector();
//		int i = 1;
//		col_ct.add("STT");
//		col_ct.add("Mã hóa đơn");
//		col_ct.add("Tên khách hàng");
//		col_ct.add("Tên nhân viên");
//		col_ct.add("Ngày lập");
//		col_ct.add("Tổng tiền");
//		try {
//			PreparedStatement pst = conn.prepareCall(gethd);
//			ResultSet rs = pst.executeQuery();
//			while (rs.next()) {
//				Vector row_vl = new Vector();
//				row_vl.add(i++);
//				row_vl.add(rs.getString("maHD"));
//				
//				khachhang = hoadonmd.getIDkhachhang(rs.getString("maKH"));
//				row_vl.add(khachhang.get(0).getHoTenKH());
//				nhanvien = hd_md.getIDnhanvien(rs.getString("maNV"));
//				row_vl.add(nhanvien.get(0).getHoTen());
//				row_vl.add(rs.getString("ngayLap"));
//				row_vl.add(fm.format(rs.getFloat("tongTien")) );
//				
//				data.add(row_vl);
//			}
//		} catch (SQLException ex) {
//			Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
//		}
//		md2 = new DefaultTableModel(data, col_ct);
//		tblHD.setModel(md2);
//
//	}
	
	private void timKiemHoaDon_TenKH() {
		
		int nvSelect = cboKH.getSelectedIndex();
		String manv = khachhang.get(nvSelect).getHoTenKH();
		if (manv.equals("")) {
			JOptionPane.showMessageDialog(null, "Chọn nhân viên cần tìm hóa đơn!", "Thông Báo",
					JOptionPane.INFORMATION_MESSAGE);
		} else {
			timTheoKH(manv);
		}
	}
	public void timTheoKH(String tenNV) {
		Locale locale = new Locale("vi", "VN");
		NumberFormat fm = NumberFormat.getCurrencyInstance(locale);
		String gethd = "SELECT * FROM HoaDon,KhachHang where HoaDon.maKH=KhachHang.maKH and hoTenKH like N'%" + tenNV + "%'";
		Connection conn = ConnectionDB.openConnection();
		Vector col_ct = new Vector();
		data = new Vector();
		int i = 1;
		col_ct.add("STT");
		col_ct.add("Mã hóa đơn");
		col_ct.add("Tên khách hàng");
		col_ct.add("Tên nhân viên");
		col_ct.add("Ngày lập");
		col_ct.add("Tổng tiền");
		try {
			PreparedStatement pst = conn.prepareCall(gethd);
			ResultSet rs = pst.executeQuery();
			while (rs.next()) {
				Vector row_vl = new Vector();
				row_vl.add(i++);
				row_vl.add(rs.getString("maHD"));
				
				khachhang = hoadonmd.getIDkhachhang(rs.getString("maKH"));
				row_vl.add(khachhang.get(0).getHoTenKH());
				nhanvien = hd_md.getIDnhanvien(rs.getString("maNV"));
				row_vl.add(nhanvien.get(0).getHoTen());
				row_vl.add(rs.getString("ngayLap"));
				row_vl.add(fm.format(rs.getFloat("tongTien")) );
				
				data.add(row_vl);
			}
		} catch (SQLException ex) {
			Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
		}
		md2 = new DefaultTableModel(data, col_ct);
		tblHD.setModel(md2);

	}
	
	//TÌM THEO TÊN NHÂN VIÊN
	
	private void timKiemHoaDon_TenNV() {
		
		int nvSelect = cboNV.getSelectedIndex();
		String manv = nhanvien.get(nvSelect).getHoTen();
		if (manv.equals("")) {
			JOptionPane.showMessageDialog(null, "Chọn nhân viên cần tìm hóa đơn!", "Thông Báo",
					JOptionPane.INFORMATION_MESSAGE);
		} else {
			timTheoNV(manv);
		}
	}
	public void timTheoNV(String tenNV) {
		Locale locale = new Locale("vi", "VN");
		NumberFormat fm = NumberFormat.getCurrencyInstance(locale);
		String gethd = "SELECT * FROM HoaDon,NhanVien where HoaDon.maNV=NhanVien.maNV and hoTen like N'%" + tenNV + "%'";
		Connection conn = ConnectionDB.openConnection();
		Vector col_ct = new Vector();
		data = new Vector();
		int i = 1;
		col_ct.add("STT");
		col_ct.add("Mã hóa đơn");
		col_ct.add("Tên khách hàng");
		col_ct.add("Tên nhân viên");
		col_ct.add("Ngày lập");
		col_ct.add("Tổng tiền");
		try {
			PreparedStatement pst = conn.prepareCall(gethd);
			ResultSet rs = pst.executeQuery();
			while (rs.next()) {
				Vector row_vl = new Vector();
				row_vl.add(i++);
				row_vl.add(rs.getString("maHD"));
				
				khachhang = hoadonmd.getIDkhachhang(rs.getString("maKH"));
				row_vl.add(khachhang.get(0).getHoTenKH());
				nhanvien = hd_md.getIDnhanvien(rs.getString("maNV"));
				row_vl.add(nhanvien.get(0).getHoTen());
				row_vl.add(rs.getString("ngayLap"));
				row_vl.add(fm.format(rs.getFloat("tongTien")) );
				
				data.add(row_vl);
			}
		} catch (SQLException ex) {
			Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
		}
		md2 = new DefaultTableModel(data, col_ct);
		tblHD.setModel(md2);

	}


    private void tblDon_hangMouseClicked(java.awt.event.MouseEvent evt) {                                         
        // TODO add your handling code here:
        Locale locale = new Locale("vi", "VN");
        NumberFormat fmx = NumberFormat.getCurrencyInstance(locale);
        NumberFormat fm = new DecimalFormat("#,###,###");
        ob_hd = hd_md.get_hd();
        int row = tblHD.getSelectedRow();
        float ttien = ob_hd.get(row).getTongTien();
        String ttst = String.valueOf(fmx.format(ttien));

		Date date = null;
		try {
			date = new SimpleDateFormat("dd-MM-yyyy").parse((String) ob_hd.get(row).getNgayLapHoaDon());
		} catch (ParseException ex) {
			 Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
		}        
        ob_nv = hd_md.getIDnhanvien(ob_hd.get(row).getMaNV());
        ob_kh = hd_md.getIDkhachhang(ob_hd.get(row).getMaKH());
        ob_ct = hd_md.get_ct();
        int row_hd = tblHD.getSelectedRow();
        String k = ob_hd.get(row_hd).getMaHoaDon();
        Vector col_ct = new Vector();
        data_ct = new Vector();
        int i = 1;
        col_ct.add("STT");
        col_ct.add("Mã hóa đơn");
        col_ct.add("Tên xe máy");
        col_ct.add("Đơn giá");
        col_ct.add("Số lượng");
        col_ct.add("Lệ phí trước bạ");
        col_ct.add("Thành tiền");
        for (HoaDon_entity ob : ob_ct) {
            HoaDon_entity hd_e = new HoaDon_entity();
            if (k.equals(ob.getMaHoaDon())) {
                Vector row_ct = new Vector();
                float dongia = Float.parseFloat(ob.getDonGia() + "");
                float sl = Float.parseFloat(ob.getSoLuong() + "");
                row_ct.add(i++);
                row_ct.add(ob.getMaHoaDon());
                ob_id_xe = hd_md.getIDxe(ob.getMaXe());
                row_ct.add(ob_id_xe.get(0).getTenXe());
                row_ct.add(fmx.format(ob_id_xe.get(0).getGiaXe()));
                row_ct.add(ob.getSoLuong());
                row_ct.add(ob.getThueXe());
                row_ct.add(fmx.format(ob.getThanhTien()));

                data_ct.add(row_ct);
            }
        }
        md2 = new DefaultTableModel(data_ct, col_ct);
        tblCTHD.setModel(md2);

    }


    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        // TODO add your handling code here:
        tblDon_hangMouseClicked(evt);
    }//GEN-LAST:event_tblHoaDonMouseClicked

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTimKH;
    private javax.swing.JButton btnTimMa;
    private javax.swing.JButton btnTimNV;
    private javax.swing.JComboBox<String> cboKH;
    private javax.swing.JComboBox<String> cboNV;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JLabel lblCTHD;
    private javax.swing.JLabel lblHD;
    private javax.swing.JLabel lblKH;
    private javax.swing.JLabel lblMaHD;
    private javax.swing.JLabel lblNV;
    private javax.swing.JLabel lblTieuDe1;
    private javax.swing.JTable tblCTHD;
    private javax.swing.JTable tblHD;
    private javax.swing.JTextField txtMaHD;
    // End of variables declaration//GEN-END:variables
}
